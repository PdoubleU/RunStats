@model IEnumerable<RunStats.Models.Shoes>

@{
    ViewData["Title"] = "Index";
}

<h2>Running Shoes</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                Total Distance (km)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShoesType.TypeName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td class="distance">
                @(item.TotalDistance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShoesType.TypeName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


<script type="text/javascript" defer>
    function convertMetersToKilometers(meters) {
        const kilometers = (meters / 1000).toFixed(3);
        return `${kilometers} km`;
    };

    const distances = document.getElementsByClassName("distance");

    Array.from(distances).forEach(i => {
        const time = parseInt(i.innerText);
        if (isNaN(time)) return;
        let convertedDistance = convertMetersToKilometers(parseInt(i.innerText));
        i.innerText = convertedDistance;
    });
</script>

